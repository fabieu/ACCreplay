stages:
  - build
  - upload
  - release

variables:
  PACKAGE_VERSION: ${CI_COMMIT_TAG}
  ACCREPLAY_EXE: "ACCreplay-${PACKAGE_VERSION}.exe"
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${PACKAGE_VERSION}"

workflow:
  rules:
    - if: $CI_COMMIT_TAG =~ /^(\d+\.)?(\d+\.)?(\*|\d+)$/

build:
  stage: build
  tags:
    - windows
  script:
    - ./build/compiler/ahk2exe.exe /in "ACCreplay.ahk" /out "./build/${ACCREPLAY_EXE}" /icon "./build/icon/icon.ico" /base "./build/compiler/Unicode 32-bit.bin"
  artifacts:
    paths:
      - ./build/${ACCREPLAY_EXE}

upload:
  stage: upload
  tags:
    - gitlab-org-docker
  image: curlimages/curl:latest
  script:
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file ./build/${ACCREPLAY_EXE} ${PACKAGE_REGISTRY_URL}/${ACCREPLAY_EXE}'

release:
  stage: release
  tags:
    - gitlab-org-docker
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script:
    - echo "running release_job"
  release: # See https://docs.gitlab.com/ee/ci/yaml/#release for available properties
    tag_name: "$CI_COMMIT_TAG"
    name: "Release ${PACKAGE_VERSION}"
    description: "${CI_COMMIT_MESSAGE}"
    assets:
      links:
        - name: "${ACCREPLAY_EXE}"
          url: "${PACKAGE_REGISTRY_URL}/${ACCREPLAY_EXE}"
